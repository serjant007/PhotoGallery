{"version":3,"sources":["context/SpaContext.jsx","components/resetButton/ResetButton.jsx","components/sortBox/SortBox.jsx","components/viewControl/ViewControl.jsx","components/header/Header.jsx","components/pagination/Pagination.jsx","components/footer/Footer.jsx","components/card/Card.jsx","components/spinner/Spinner.js","components/main-card/MainCard.jsx","components/cardTree/CardTree.jsx","components/tree/Tree.jsx","app.jsx","index.js"],"names":["SpaContext","createContext","ResetButton","onReset","React","useContext","className","onClick","SortBox","memo","sort","setSort","onSort","e","target","value","type","name","onChange","defaultChecked","ViewControl","cardView","setCardView","Header","Fragment","Pagination","cardsPerPage","totalCards","paginate","currentPage","pageNumbers","i","Math","ceil","push","map","number","href","Footer","Card","obj","removeItem","boxCard","useRef","stamp","ref","src","image","alt","match","timestamp","Date","toLocaleDateString","category","filesize","round","width","height","viewBox","fill","xmlns","d","Spinner","MainCard","items","loading","CardTree","Tree","cards","categories","item","filter","index","indexOf","console","log","useEffect","SimpleLightbox","history","event","tagName","childrenContainer","parentNode","querySelector","hidden","classList","add","remove","card","tree","App","localData","localStorage","getItem","serverCards","JSON","parse","useState","setCards","setLoading","fetch","then","resp","json","data","setItem","stringify","setCurrentPage","indexOfLastCard","indexOfFirsCard","currentCard","slice","length","sortByDate","prev","next","sortByFileSize","regex","sortByName","newArr","Provider","pageNumber","current","arr","n","firstCards","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55576e0e.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const SpaContext = createContext();\n","import React from 'react';\nimport { SpaContext } from '../../context/SpaContext';\nimport './resetButton.css';\n\nconst ResetButton = () => {\n  const { onReset } = React.useContext(SpaContext);\n\n  return (\n    <div className=\"reset-button\" onClick={onReset}>\n      <p>Reset</p>\n    </div>\n  );\n};\n\nexport default ResetButton;\n","import React from 'react';\nimport { SpaContext } from '../../context/SpaContext';\nimport './sortBox.css';\n\nconst SortBox = React.memo(function SortBox() {\n  const { sort, setSort } = React.useContext(SpaContext);\n\n  const onSort = (e) => {\n    setSort(e.target.value);\n  };\n\n  return (\n    <div className=\"sort\">\n      <h4>SortBy: {sort}</h4>\n      <ul className=\"sort-box\">\n        <div className=\"sort-subbox\">\n          <label>\n            <input\n              className=\"sort-subbox__item\"\n              type=\"radio\"\n              name=\"sort\"\n              value=\"category\"\n              onChange={onSort}\n              defaultChecked\n            />\n            category\n          </label>\n          <label>\n            <input\n              className=\"sort-subbox__item\"\n              type=\"radio\"\n              name=\"sort\"\n              value=\"date\"\n              onChange={onSort}\n            />\n            date\n          </label>\n        </div>\n        <div className=\"sort-subbox\">\n          <label>\n            <input\n              className=\"sort-subbox__item\"\n              type=\"radio\"\n              name=\"sort\"\n              value=\"name\"\n              onChange={onSort}\n            />\n            name\n          </label>\n          <label>\n            <input\n              className=\"sort-subbox__item\"\n              type=\"radio\"\n              name=\"sort\"\n              value=\"filesize\"\n              onChange={onSort}\n            />\n            filesize\n          </label>\n        </div>\n      </ul>\n    </div>\n  );\n});\n\nexport default SortBox;\n","import React from 'react';\nimport { SpaContext } from '../../context/SpaContext';\nimport './viewControl.css';\n\nconst ViewControl = React.memo(function ViewControl() {\n  const { cardView, setCardView } = React.useContext(SpaContext);\n\n  const onChange = (e) => {\n    setCardView(e.target.value);\n  };\n  return (\n    <div className=\"view-control\">\n      <ul className=\"view-control-box\">\n        <h4>View: {cardView}</h4>\n        <label>\n          <input\n            className=\"view-control-box__item\"\n            type=\"radio\"\n            name=\"card\"\n            value=\"card\"\n            onChange={onChange}\n            defaultChecked\n          />\n          Card\n        </label>\n        <label>\n          <input\n            className=\"view-control-box__item\"\n            type=\"radio\"\n            name=\"card\"\n            value=\"tree\"\n            onChange={onChange}\n          />\n          Tree\n        </label>\n      </ul>\n    </div>\n  );\n});\n\nexport default ViewControl;\n","import React from 'react';\nimport { SpaContext } from '../../context/SpaContext';\nimport ResetButton from '../resetButton/ResetButton';\nimport SortBox from '../sortBox/SortBox';\nimport ViewControl from '../viewControl/ViewControl';\nimport './header.css';\n\nconst Header = () => {\n  const { cardView } = React.useContext(SpaContext);\n\n  return (\n    <header className=\"header\">\n      <ViewControl />\n      {cardView === 'card' ? (\n        <React.Fragment>\n          <SortBox />\n          <ResetButton />\n        </React.Fragment>\n      ) : null}\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { SpaContext } from '../../context/SpaContext';\nimport './pagination.css';\n\nconst Pagination = React.memo(function Pagination() {\n  const { cardsPerPage, totalCards, paginate, currentPage } = React.useContext(SpaContext);\n\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalCards / cardsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pager\">\n        {pageNumbers.map((number) => (\n          <li key={number} className=\"pager__item\">\n            <a\n              onClick={() => paginate(number)}\n              className={currentPage === number ? 'pager__link pager__link-active' : 'pager__link'}\n              href=\"!#\">\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n});\n\nexport default Pagination;\n","import React from 'react';\nimport Pagination from '../pagination/Pagination';\nimport './footer.css';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Pagination />\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { SpaContext } from '../../context/SpaContext';\nimport './card.css';\n\nconst Card = (obj) => {\n  const { removeItem } = React.useContext(SpaContext);\n  const boxCard = React.useRef();\n  function date(stamp) {\n    return new Date(stamp).toLocaleDateString();\n  }\n  function size(number) {\n    return Math.round(number / 1024);\n  }\n\n  const regex = /(?<=\\/).*/;\n  return (\n    <div className=\"main-card\" ref={boxCard}>\n      <img\n        src={`http://contest.elecard.ru/frontend_data/${obj.image}`}\n        alt=\"pic1\"\n        className=\"main-card__img\"\n      />\n      <div className=\"main-card-description\">\n        <span>Name: {obj.image.match(regex)}</span>\n        <p>Date: {date(obj.timestamp)}</p>\n        <p>Category: {obj.category}</p>\n        <p>Size: {size(obj.filesize)} КБ</p>\n      </div>\n      <div className=\"main-card-remove\" onClick={() => removeItem(obj, boxCard)}>\n        <button className=\"button--circle\">\n          <svg\n            width=\"10\"\n            height=\"10\"\n            viewBox=\"0 0 10 10\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n              fill=\"#000\"\n            />\n            <path\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n              fill=\"#000\"\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"loadingio-spinner-double-ring-qclwkbflt29\">\n            <div className=\"ldio-bymgqkz2wxd\">\n                <div></div>\n                <div></div>\n                <div>\n                    <div></div>\n                </div>\n                <div>\n                    <div></div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Spinner;\n","import React from 'react';\nimport Card from '../card/Card';\nimport '../main-card/mainCard.css';\nimport Spinner from '../spinner/Spinner';\n\nfunction MainCard({ items, loading }) {\n  return (\n    <section className=\"main\">\n      {loading ? (\n        <Spinner />\n      ) : (\n        items.map((obj) => <Card key={obj.filesize + obj.category} {...obj} />)\n      )}\n    </section>\n  );\n}\n\nexport default MainCard;\n","import React from 'react';\nimport './cardTree.css';\n\nconst CardTree = ({ image, category, filesize, timestamp }) => {\n  function date(stamp) {\n    return new Date(stamp).toLocaleDateString();\n  }\n  function size(number) {\n    return Math.round(number / 1024);\n  }\n\n  return (\n    <div className=\"main-card-tree\">\n      <a className=\"simpleLightBox\" href={`http://contest.elecard.ru/frontend_data/${image}`}>\n        <img\n          src={`http://contest.elecard.ru/frontend_data/${image}`}\n          alt=\"pic1\"\n          className=\"main-card__img-tree\"\n        />\n      </a>\n      <div className=\"main-card-description-tree\">\n        <p>Date: {date(timestamp)}</p>\n        <p>Category: {category}</p>\n        <p>Size: {size(filesize)} КБ</p>\n      </div>\n    </div>\n  );\n};\n\nexport default CardTree;\n","import React from 'react';\nimport SimpleLightbox from 'simplelightbox';\nimport { SpaContext } from '../../context/SpaContext';\nimport CardTree from '../cardTree/CardTree';\nimport './simple-lightbox.css';\nimport './tree.css';\n\nconst Tree = React.memo(function Tree() {\n  const { cards } = React.useContext(SpaContext);\n\n  const categories = cards.map((item) => item.category);\n  const category = categories.filter((item, index) => {\n    return categories.indexOf(item) === index;\n  });\n  console.log(category);\n  React.useEffect(() => {\n    new SimpleLightbox('.simpleLightBox', {\n      history: false,\n    });\n  });\n\n  const toggleCategory = (event) => {\n    if (event.target.tagName !== 'SPAN') return;\n    let childrenContainer = event.target.parentNode.querySelector('ul');\n    if (!childrenContainer) return;\n    childrenContainer.hidden = !childrenContainer.hidden;\n    if (childrenContainer.hidden) {\n      event.target.classList.add('hide');\n      event.target.classList.remove('show');\n    } else {\n      event.target.classList.add('show');\n      event.target.classList.remove('hide');\n    }\n  };\n\n  return (\n    <section className=\"main\">\n      <ul onClick={toggleCategory} className=\"main-category\">\n        <li>\n          <span className=\"show\">Category</span>\n          <ul>\n            {category.map((item) => (\n              <li key={item} className=\"main-category__category\">\n                <span className=\"main-category__category-item show\">{item}</span>\n                <ul className=\"main-category__card\">\n                  {cards.map((card, i) =>\n                    card.category === item ? (\n                      <li key={`card${i}`}>\n                        <span className=\"main-category__card-item show\">{`Card${i}`}</span>\n                        <ul>\n                          <li>\n                            <CardTree {...card} tree=\"tree\" />\n                          </li>\n                        </ul>\n                      </li>\n                    ) : null,\n                  )}\n                </ul>\n              </li>\n            ))}\n          </ul>\n        </li>\n      </ul>\n    </section>\n  );\n});\n\nexport default Tree;\n","import React, { useState } from 'react';\nimport { SpaContext } from './context/SpaContext';\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport MainCard from './components/main-card/MainCard';\nimport Tree from './components/tree/Tree';\nimport './app.css';\n\nconst App = () => {\n  // <Get Data>\n  const localData = localStorage.getItem('cards');\n  const serverCards = JSON.parse(localData);\n\n  const [cards, setCards] = useState([]);\n\n  React.useEffect(() => {\n    setLoading(true);\n    serverCards !== null\n      ? setCards(serverCards)\n      : fetch('http://contest.elecard.ru/frontend_data/catalog.json')\n          .then((resp) => resp.json())\n          .then((data) => {\n            setCards(data);\n            localStorage.setItem('cardsCopy', JSON.stringify(data));\n          });\n    setLoading(false);\n  }, []);\n\n  // </Get Data>\n\n  // <Service-State>\n\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage] = useState(66);\n  const [cardView, setCardView] = useState('card');\n  const [sort, setSort] = useState('category');\n  // </Service-State>\n\n  // <Pagination>\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirsCard = indexOfLastCard - cardsPerPage;\n  let currentCard = cards.slice(indexOfFirsCard, indexOfLastCard);\n  const totalCards = cards.length;\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  // </Пагинация>\n\n  // <Pagination>\n\n  // <Sort>\n\n  switch (sort) {\n    case 'date':\n      {\n        const sortByDate = [...cards].sort((prev, next) => prev.timestamp - next.timestamp);\n        currentCard = sortByDate.slice(indexOfFirsCard, indexOfLastCard);\n      }\n      break;\n    case 'filesize':\n      {\n        const sortByFileSize = [...cards].sort((prev, next) => prev.filesize - next.filesize);\n        currentCard = sortByFileSize.slice(indexOfFirsCard, indexOfLastCard);\n      }\n      break;\n    case 'name':\n      {\n        const regex = /(?<=\\/).*-/;\n        const sortByName = [...cards].sort((prev, next) =>\n          prev.image.match(regex) > next.image.match(regex) ? 1 : -1,\n        );\n        currentCard = sortByName.slice(indexOfFirsCard, indexOfLastCard);\n      }\n      break;\n    case 'category':\n      {\n        const newArr = cards.slice();\n        currentCard = newArr.slice(indexOfFirsCard, indexOfLastCard);\n      }\n      break;\n    default:\n      currentCard = cards.slice(indexOfFirsCard, indexOfLastCard);\n  }\n\n  // // </Sort>\n\n  // // <Local Storage>\n\n  const removeItem = (obj, boxCard) => {\n    console.log(boxCard.current);\n\n    boxCard.current.classList.add('fade-out');\n\n    const arr = cards.filter((n) => n.filesize !== obj.filesize);\n    setCards(arr);\n    localStorage.setItem('cards', JSON.stringify(arr));\n    const localData = localStorage.getItem('cards');\n    currentCard = JSON.parse(localData).slice(indexOfFirsCard, indexOfLastCard);\n    return currentCard;\n  };\n  // // </Local Storage>\n\n  // // <Reset function>\n\n  const onReset = () => {\n    const localData = localStorage.getItem('cardsCopy');\n    const firstCards = JSON.parse(localData);\n    setCards(firstCards);\n    localStorage.setItem('cards', JSON.stringify(firstCards));\n  };\n  // </Reset function>\n\n  return (\n    <SpaContext.Provider\n      value={{\n        cardsPerPage,\n        totalCards,\n        paginate,\n        currentPage,\n        cardView,\n        setCardView,\n        cards,\n        loading,\n        sort,\n        setSort,\n        removeItem,\n        setLoading,\n        onReset,\n      }}>\n      <div className=\"app\">\n        <Header />\n        {cardView === 'card' ? <MainCard items={currentCard} loading={loading} /> : <Tree />}\n        {cardView === 'card' ? <Footer /> : null}\n      </div>\n    </SpaContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}